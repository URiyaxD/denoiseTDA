// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// KlokeAlg
NumericMatrix KlokeAlg(NumericMatrix sample, NumericMatrix set, double sigma, double omega, int iter, double step);
RcppExport SEXP _denoiseTDA_KlokeAlg(SEXP sampleSEXP, SEXP setSEXP, SEXP sigmaSEXP, SEXP omegaSEXP, SEXP iterSEXP, SEXP stepSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type sample(sampleSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type set(setSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type omega(omegaSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< double >::type step(stepSEXP);
    rcpp_result_gen = Rcpp::wrap(KlokeAlg(sample, set, sigma, omega, iter, step));
    return rcpp_result_gen;
END_RCPP
}
// MeanShiftAlg
NumericMatrix MeanShiftAlg(NumericMatrix set, double sigma, int iter, double step);
RcppExport SEXP _denoiseTDA_MeanShiftAlg(SEXP setSEXP, SEXP sigmaSEXP, SEXP iterSEXP, SEXP stepSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type set(setSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< double >::type step(stepSEXP);
    rcpp_result_gen = Rcpp::wrap(MeanShiftAlg(set, sigma, iter, step));
    return rcpp_result_gen;
END_RCPP
}
// KDE
NumericMatrix KDE(NumericMatrix set, double sigma);
RcppExport SEXP _denoiseTDA_KDE(SEXP setSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type set(setSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(KDE(set, sigma));
    return rcpp_result_gen;
END_RCPP
}
// KlokeKDE
NumericMatrix KlokeKDE(NumericMatrix sample, NumericMatrix set, double sigma, double omega);
RcppExport SEXP _denoiseTDA_KlokeKDE(SEXP sampleSEXP, SEXP setSEXP, SEXP sigmaSEXP, SEXP omegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type sample(sampleSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type set(setSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type omega(omegaSEXP);
    rcpp_result_gen = Rcpp::wrap(KlokeKDE(sample, set, sigma, omega));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_denoiseTDA_KlokeAlg", (DL_FUNC) &_denoiseTDA_KlokeAlg, 6},
    {"_denoiseTDA_MeanShiftAlg", (DL_FUNC) &_denoiseTDA_MeanShiftAlg, 4},
    {"_denoiseTDA_KDE", (DL_FUNC) &_denoiseTDA_KDE, 2},
    {"_denoiseTDA_KlokeKDE", (DL_FUNC) &_denoiseTDA_KlokeKDE, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_denoiseTDA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
